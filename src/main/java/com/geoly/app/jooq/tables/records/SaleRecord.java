/*
 * This file is generated by jOOQ.
 */
package com.geoly.app.jooq.tables.records;


import com.geoly.app.jooq.tables.Sale;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SaleRecord extends UpdatableRecordImpl<SaleRecord> implements Record5<Integer, Byte, Timestamp, Timestamp, Timestamp> {

    private static final long serialVersionUID = -1363168676;

    /**
     * Setter for <code>geoly.SALE.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>geoly.SALE.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>geoly.SALE.ACTIVE</code>.
     */
    public void setActive(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>geoly.SALE.ACTIVE</code>.
     */
    public Byte getActive() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>geoly.SALE.CREATED_AT</code>.
     */
    public void setCreatedAt(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>geoly.SALE.CREATED_AT</code>.
     */
    public Timestamp getCreatedAt() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>geoly.SALE.END_AT</code>.
     */
    public void setEndAt(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>geoly.SALE.END_AT</code>.
     */
    public Timestamp getEndAt() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>geoly.SALE.START_AT</code>.
     */
    public void setStartAt(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>geoly.SALE.START_AT</code>.
     */
    public Timestamp getStartAt() {
        return (Timestamp) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Byte, Timestamp, Timestamp, Timestamp> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Byte, Timestamp, Timestamp, Timestamp> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Sale.SALE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field2() {
        return Sale.SALE.ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return Sale.SALE.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Sale.SALE.END_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return Sale.SALE.START_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component2() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getEndAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getStartAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value2() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getEndAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getStartAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SaleRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SaleRecord value2(Byte value) {
        setActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SaleRecord value3(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SaleRecord value4(Timestamp value) {
        setEndAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SaleRecord value5(Timestamp value) {
        setStartAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SaleRecord values(Integer value1, Byte value2, Timestamp value3, Timestamp value4, Timestamp value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SaleRecord
     */
    public SaleRecord() {
        super(Sale.SALE);
    }

    /**
     * Create a detached, initialised SaleRecord
     */
    public SaleRecord(Integer id, Byte active, Timestamp createdAt, Timestamp endAt, Timestamp startAt) {
        super(Sale.SALE);

        set(0, id);
        set(1, active);
        set(2, createdAt);
        set(3, endAt);
        set(4, startAt);
    }
}
