/*
 * This file is generated by jOOQ.
 */
package com.geoly.app.jooq.tables.records;


import com.geoly.app.jooq.tables.UserBadge;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserBadgeRecord extends UpdatableRecordImpl<UserBadgeRecord> implements Record4<Integer, Timestamp, Integer, Integer> {

    private static final long serialVersionUID = -766650662;

    /**
     * Setter for <code>geoly.USER_BADGE.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>geoly.USER_BADGE.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>geoly.USER_BADGE.CREATED_AT</code>.
     */
    public void setCreatedAt(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>geoly.USER_BADGE.CREATED_AT</code>.
     */
    public Timestamp getCreatedAt() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>geoly.USER_BADGE.BADGE_ID</code>.
     */
    public void setBadgeId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>geoly.USER_BADGE.BADGE_ID</code>.
     */
    public Integer getBadgeId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>geoly.USER_BADGE.USER_ID</code>.
     */
    public void setUserId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>geoly.USER_BADGE.USER_ID</code>.
     */
    public Integer getUserId() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Timestamp, Integer, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Timestamp, Integer, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return UserBadge.USER_BADGE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return UserBadge.USER_BADGE.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return UserBadge.USER_BADGE.BADGE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return UserBadge.USER_BADGE.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getBadgeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getBadgeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserBadgeRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserBadgeRecord value2(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserBadgeRecord value3(Integer value) {
        setBadgeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserBadgeRecord value4(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserBadgeRecord values(Integer value1, Timestamp value2, Integer value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserBadgeRecord
     */
    public UserBadgeRecord() {
        super(UserBadge.USER_BADGE);
    }

    /**
     * Create a detached, initialised UserBadgeRecord
     */
    public UserBadgeRecord(Integer id, Timestamp createdAt, Integer badgeId, Integer userId) {
        super(UserBadge.USER_BADGE);

        set(0, id);
        set(1, createdAt);
        set(2, badgeId);
        set(3, userId);
    }
}
