/*
 * This file is generated by jOOQ.
 */
package com.geoly.app.jooq.tables.records;


import com.geoly.app.jooq.tables.Stage;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StageRecord extends UpdatableRecordImpl<StageRecord> implements Record7<Integer, String, String, String, String, String, Integer> {

    private static final long serialVersionUID = -356137269;

    /**
     * Setter for <code>geoly.STAGE.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>geoly.STAGE.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>geoly.STAGE.ANSWER</code>.
     */
    public void setAnswer(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>geoly.STAGE.ANSWER</code>.
     */
    public String getAnswer() {
        return (String) get(1);
    }

    /**
     * Setter for <code>geoly.STAGE.LATITUDE</code>.
     */
    public void setLatitude(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>geoly.STAGE.LATITUDE</code>.
     */
    public String getLatitude() {
        return (String) get(2);
    }

    /**
     * Setter for <code>geoly.STAGE.LONGITUDE</code>.
     */
    public void setLongitude(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>geoly.STAGE.LONGITUDE</code>.
     */
    public String getLongitude() {
        return (String) get(3);
    }

    /**
     * Setter for <code>geoly.STAGE.QUESTION</code>.
     */
    public void setQuestion(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>geoly.STAGE.QUESTION</code>.
     */
    public String getQuestion() {
        return (String) get(4);
    }

    /**
     * Setter for <code>geoly.STAGE.TYPE</code>.
     */
    public void setType(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>geoly.STAGE.TYPE</code>.
     */
    public String getType() {
        return (String) get(5);
    }

    /**
     * Setter for <code>geoly.STAGE.QUEST_ID</code>.
     */
    public void setQuestId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>geoly.STAGE.QUEST_ID</code>.
     */
    public Integer getQuestId() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, String, String, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, String, String, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Stage.STAGE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Stage.STAGE.ANSWER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Stage.STAGE.LATITUDE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Stage.STAGE.LONGITUDE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Stage.STAGE.QUESTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Stage.STAGE.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Stage.STAGE.QUEST_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getAnswer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getLatitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getQuestion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getQuestId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getAnswer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getLatitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getQuestion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getQuestId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StageRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StageRecord value2(String value) {
        setAnswer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StageRecord value3(String value) {
        setLatitude(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StageRecord value4(String value) {
        setLongitude(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StageRecord value5(String value) {
        setQuestion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StageRecord value6(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StageRecord value7(Integer value) {
        setQuestId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StageRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StageRecord
     */
    public StageRecord() {
        super(Stage.STAGE);
    }

    /**
     * Create a detached, initialised StageRecord
     */
    public StageRecord(Integer id, String answer, String latitude, String longitude, String question, String type, Integer questId) {
        super(Stage.STAGE);

        set(0, id);
        set(1, answer);
        set(2, latitude);
        set(3, longitude);
        set(4, question);
        set(5, type);
        set(6, questId);
    }
}
