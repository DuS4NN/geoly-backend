/*
 * This file is generated by jOOQ.
 */
package com.geoly.app.jooq.tables;


import com.geoly.app.jooq.Geoly;
import com.geoly.app.jooq.Indexes;
import com.geoly.app.jooq.Keys;
import com.geoly.app.jooq.tables.records.PartyUserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PartyUser extends TableImpl<PartyUserRecord> {

    private static final long serialVersionUID = -177249357;

    /**
     * The reference instance of <code>geoly.PARTY_USER</code>
     */
    public static final PartyUser PARTY_USER = new PartyUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PartyUserRecord> getRecordType() {
        return PartyUserRecord.class;
    }

    /**
     * The column <code>geoly.PARTY_USER.ID</code>.
     */
    public final TableField<PartyUserRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>geoly.PARTY_USER.CREATED_AT</code>.
     */
    public final TableField<PartyUserRecord, Timestamp> CREATED_AT = createField("CREATED_AT", org.jooq.impl.SQLDataType.TIMESTAMP.precision(6), this, "");

    /**
     * The column <code>geoly.PARTY_USER.PARTY_ID</code>.
     */
    public final TableField<PartyUserRecord, Integer> PARTY_ID = createField("PARTY_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>geoly.PARTY_USER.USER_ID</code>.
     */
    public final TableField<PartyUserRecord, Integer> USER_ID = createField("USER_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>geoly.PARTY_USER</code> table reference
     */
    public PartyUser() {
        this(DSL.name("PARTY_USER"), null);
    }

    /**
     * Create an aliased <code>geoly.PARTY_USER</code> table reference
     */
    public PartyUser(String alias) {
        this(DSL.name(alias), PARTY_USER);
    }

    /**
     * Create an aliased <code>geoly.PARTY_USER</code> table reference
     */
    public PartyUser(Name alias) {
        this(alias, PARTY_USER);
    }

    private PartyUser(Name alias, Table<PartyUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private PartyUser(Name alias, Table<PartyUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PartyUser(Table<O> child, ForeignKey<O, PartyUserRecord> key) {
        super(child, key, PARTY_USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Geoly.GEOLY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FKGBM3CRUYQ6N25LRIIYC2XAD43_INDEX_3, Indexes.FKOATBT6TV26KK2R5VGUA7OJSM_INDEX_3, Indexes.PRIMARY_KEY_3B);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PartyUserRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_3B;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PartyUserRecord>> getKeys() {
        return Arrays.<UniqueKey<PartyUserRecord>>asList(Keys.CONSTRAINT_3B);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PartyUserRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PartyUserRecord, ?>>asList(Keys.FKOATBT6TV26KK2R5VGUA7OJSM, Keys.FKGBM3CRUYQ6N25LRIIYC2XAD43);
    }

    public Party party() {
        return new Party(this, Keys.FKOATBT6TV26KK2R5VGUA7OJSM);
    }

    public User user() {
        return new User(this, Keys.FKGBM3CRUYQ6N25LRIIYC2XAD43);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PartyUser as(String alias) {
        return new PartyUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PartyUser as(Name alias) {
        return new PartyUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PartyUser rename(String name) {
        return new PartyUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PartyUser rename(Name name) {
        return new PartyUser(name, null);
    }
}
